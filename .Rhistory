#Put any packages you need here
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(car)
library(gt)
library(gtsummary)
library(corrplot)
library(tinytex)
# Bring in the dataset here.
Claims <- read.csv("C:\\UserData\\z002r7kt\\OneDrive - Siemens AG\\Reference Documents\\Learnings\\Fall-24_ECO6416_Group6\\Insurance_Data_Group6.csv")
gt(head(Claims))
set.seed(123456)
index <- sample(seq_len(nrow(Claims)), size = 30)
train <- Claims[-index,]
test <- Claims[index,]
quant_train <- train %>%
select(Charges, Age, BMI)
quant_train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2"
)
set.seed(123456)
index <- sample(seq_len(nrow(Claims)), size = 30)
train <- Claims[-index,]
test <- Claims[index,]
quant_train <- train %>%
select(Charges, Age, BMI)
quant_train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2"
))
set.seed(123456)
index <- sample(seq_len(nrow(Claims)), size = 30)
train <- Claims[-index,]
test <- Claims[index,]
quant_train <- train %>%
select(Charges, Age, BMI)
quant_train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2"
)
#Put any packages you need here
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(car)
library(gt)
library(gtsummary)
library(corrplot)
library(tinytex)
# Bring in the dataset here.
Claims <- read.csv("C:\\UserData\\z002r7kt\\OneDrive - Siemens AG\\Reference Documents\\Learnings\\Fall-24_ECO6416_Group6\\Insurance_Data_Group6.csv")
gt(head(Claims))
set.seed(123456)
index <- sample(seq_len(nrow(Claims)), size = 30)
train <- Claims[-index,]
test <- Claims[index,]
quant_train <- train %>%
select(Charges, Age, BMI)
quant_train %>%
tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25}, {p75})",
"{min}, {max}"),
all_categorical() ~ "{n} / {N} ({p}%)"),
type = all_continuous() ~ "continuous2"
)
#transform dataset - natural log & squared
#Charges
train$lnCharges <- log(train$Charges)
train$ChargesSquared <- train$Charges^2
#BMI
train$lnBMI <- log(train$BMI)
train$BMISquared <- train$BMI^2
#Age
train$lnAge <- log(train$Age)
train$AgeSquared <- train$Age^2
#Plot Changes - Before and After
#Charges
par(mfrow=c(1,3))
hist(train$Charges) #before
hist(train$lnCharges) #after ln
hist(train$ChargesSquared) #after squared
#BMI
par(mfrow=c(1,3))
hist(train$BMI) #before
hist(train$lnBMI) #after ln
hist(train$BMISquared) #after squared
#Age
par(mfrow=c(1,3))
hist(train$Age) #before
hist(train$lnAge) #after ln
hist(train$AgeSquared) #after squared
scatterplotMatrix(train[,c(1,2,3)]) # grabbing original
scatterplotMatrix(train[,c(10,11,14)]) # grabbing ln
model_log <- lm(lnCharges ~., data = train[,c(4:9,10,12,14)]) #pulling only columns I want
summary(model_log)
model_quad <- lm(ChargesSquared ~., data = train[,c(4:9,11,13,15)]) #pulling only columns I want
summary(model_quad)
par(mfrow=c(2,2))
plot(model_log)
#Put any packages you need here
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(car)
library(gt)
library(gtsummary)
library(corrplot)
#library(tinytex)
#transform dataset - natural log & squared
#Charges
train$lnCharges <- log(train$Charges)
train$ChargesSquared <- train$Charges^2
#BMI
train$lnBMI <- log(train$BMI)
train$BMISquared <- train$BMI^2
#Age
train$lnAge <- log(train$Age)
train$AgeSquared <- train$Age^2
#Plot Changes - Before and After
#Charges
par(mfrow=c(1,3))
hist(train$Charges) #before
hist(train$lnCharges) #after ln
hist(train$ChargesSquared) #after squared
#BMI
par(mfrow=c(1,3))
hist(train$BMI) #before
hist(train$lnBMI) #after ln
hist(train$BMISquared) #after squared
#Age
par(mfrow=c(1,3))
hist(train$Age) #before
hist(train$lnAge) #after ln
hist(train$AgeSquared) #after squared
scatterplotMatrix(train[,c(1,2,3)]) # grabbing original
scatterplotMatrix(train[,c(10,12,14)]) # grabbing ln
scatterplotMatrix(train[,c(11,13,15)]) # grabbing squared
model_log <- lm(lnCharges ~., data = train[,c(4:9,10,12,14)]) #pulling new ln columns
summary(model_log)
model_quad <- lm(ChargesSquared ~., data = train[,c(4:9,11,13,15)]) #pulling new squared columns
summary(model_quad)
par(mfrow=c(2,2))
plot(model_log)
test$lnCharges <- log(test$Charges)
test$lnBMI <- log(test$BMI)
test$lnAge <- log(test$Age)
test$original_model_pred <- predict(original_model, newdata = test)
original_model <- lm(Charges ~. , data = train[,c(1:9)])
summary(original_model)
scatterplotMatrix(train[,1:3])
par(mfrow=c(2,2))
plot(original_model)
#Put any packages you need here
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(car)
library(gt)
library(gtsummary)
library(corrplot)
#library(tinytex)
# Bring in the dataset here.
Claims <- read.csv("C:\\UserData\\z002r7kt\\OneDrive - Siemens AG\\Reference Documents\\Learnings\\Fall-24_ECO6416_Group6\\Insurance_Data_Group6.csv")
gt(head(Claims))
set.seed(123456)
index <- sample(seq_len(nrow(Claims)), size = 30)
train <- Claims[-index,]
test <- Claims[index,]
quant_train <- train %>%
select(Charges, Age, BMI)
#quant_train %>%
#tbl_summary(statistic = list(all_continuous() ~ c("{mean} ({sd})",
#"{median} ({p25}, {p75})",
#"{min}, {max}"),
#all_categorical() ~ "{n} / {N} ({p}%)"),
#type = all_continuous() ~ "continuous2"
corrplot(cor(quant_train))
original_model <- lm(Charges ~. , data = train[,c(1:9)])
summary(original_model)
scatterplotMatrix(train[,1:3])
par(mfrow=c(2,2))
plot(original_model)
#transform dataset - natural log & squared
#Charges
train$lnCharges <- log(train$Charges)
train$ChargesSquared <- train$Charges^2
#BMI
train$lnBMI <- log(train$BMI)
train$BMISquared <- train$BMI^2
#Age
train$lnAge <- log(train$Age)
train$AgeSquared <- train$Age^2
#Plot Changes - Before and After
#Charges
par(mfrow=c(1,3))
hist(train$Charges) #before
hist(train$lnCharges) #after ln
hist(train$ChargesSquared) #after squared
#BMI
par(mfrow=c(1,3))
hist(train$BMI) #before
hist(train$lnBMI) #after ln
hist(train$BMISquared) #after squared
#Age
par(mfrow=c(1,3))
hist(train$Age) #before
hist(train$lnAge) #after ln
hist(train$AgeSquared) #after squared
scatterplotMatrix(train[,c(1,2,3)]) # grabbing original
scatterplotMatrix(train[,c(10,12,14)]) # grabbing ln
scatterplotMatrix(train[,c(11,13,15)]) # grabbing squared
model_log <- lm(lnCharges ~., data = train[,c(4:9,10,12,14)]) #pulling new ln columns
summary(model_log)
model_quad <- lm(ChargesSquared ~., data = train[,c(4:9,11,13,15)]) #pulling new squared columns
summary(model_quad)
par(mfrow=c(2,2))
plot(model_log)
test$lnCharges <- log(test$Charges)
test$lnBMI <- log(test$BMI)
test$lnAge <- log(test$Age)
test$original_model_pred <- predict(original_model, newdata = test)
test$model_log_pred <- predict(model_log,newdata = test) %>% exp()
# Finding the error
test$error_om <- test$original_model_pred - test$Charges
test$error_log <- test$model_log_pred - test$Charges
#
#Bias
mean(test$error_om)
mean(test$error_log)
#MAE
mae <- function(error_vector){
error_vector %>%
abs() %>%
mean()
}
mae(test$error_om)
mae(test$error_log)
#RMSE
rmse <- function(error_vector){
error_vector^2 %>%
mean() %>%
sqrt()
}
rmse(test$error_om)
rmse(test$error_log)
#MAPE
mape <- function(error_vector, actual_vector){
(error_vector/actual_vector) %>%
abs() %>%
mean()
}
mape(test$error_om, test$Charges)
mape(test$error_log, test$Charges)
#transform dataset - natural log & squared
#Charges
train$lnCharges <- log(train$Charges)
train$ChargesSquared <- train$Charges^2
#BMI
train$lnBMI <- log(train$BMI)
train$BMISquared <- train$BMI^2
#Age
train$lnAge <- log(train$Age)
train$AgeSquared <- train$Age^2
#Plot Changes - Before and After
#Charges
par(mfrow=c(1,3))
hist(train$Charges) #before
hist(train$lnCharges) #after ln
hist(train$ChargesSquared) #after squared
#BMI
par(mfrow=c(1,3))
hist(train$BMI) #before
hist(train$lnBMI) #after ln
hist(train$BMISquared) #after squared
#Age
par(mfrow=c(1,3))
hist(train$Age) #before
hist(train$lnAge) #after ln
hist(train$AgeSquared) #after squared
scatterplotMatrix(train[,c(1,2,3)]) # grabbing original
scatterplotMatrix(train[,c(10,12,14)]) # grabbing ln
scatterplotMatrix(train[,c(11,13,15)]) # grabbing squared
model_log <- lm(lnCharges ~., data = train[,c(4:9,10,12,14)]) #pulling new ln columns
summary(model_log)
par(mfrow=c(2,2))
plot(model_log)
model_quad <- lm(ChargesSquared ~., data = train[,c(4:9,11,13,15)]) #pulling new squared columns
summary(model_quad)
par(mfrow=c(2,2))
plot(model_quad)
corrplot(cor(quant_train))
cor(quant_train)
corrplot(cor(quant_train))
